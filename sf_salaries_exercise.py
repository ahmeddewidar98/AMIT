# -*- coding: utf-8 -*-
"""SF Salaries Exercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gZlAD5wYtzGgVIyOr_GVfJyTDe0EwAlU

# SF Salaries Exercise

** Import pandas as pd.**
"""

import pandas as pd
import numpy as np

"""** Read Salaries.csv as a dataframe called sal.**"""

sal = pd.read_csv('/content/Salaries.csv')
#sal = pd.DataFrame(sal)

"""** Check the head of the DataFrame. **"""

sal.head()

"""** Use the .info() method to find out how many entries there are.**"""

sal.info()

"""**What is the average BasePay ?**"""

sal['BasePay'].mean()

"""** What is the highest amount of OvertimePay in the dataset ? **"""

sal['OvertimePay'].max()

"""** What is the job title of  JOSEPH DRISCOLL ? Note: Use all caps, otherwise you may get an answer that doesn't match up (there is also a lowercase Joseph Driscoll). **"""

sal.set_index('EmployeeName',inplace=True)
sal.loc['JOSEPH DRISCOLL','JobTitle']

"""** How much does JOSEPH DRISCOLL make (including benefits)? **"""

sal.loc['JOSEPH DRISCOLL','TotalPayBenefits']

"""** What is the name of highest paid person (including benefits)?**"""

most_paid = sal['TotalPayBenefits'].max()
sal.loc[sal['TotalPayBenefits']==most_paid]

"""** What is the name of lowest paid person (including benefits)? Do you notice something strange about how much he or she is paid?**"""

lowest_paid = sal['TotalPayBenefits'].min()
sal.loc[sal['TotalPayBenefits']==lowest_paid]

"""** What was the average (mean) BasePay of all employees per year? (2011-2014) ? **"""

by_year = sal.groupby('Year')
by_year_mean = by_year.mean()
by_year_mean['BasePay']

"""** How many unique job titles are there? **"""

sal['JobTitle'].nunique()

"""** What are the top 5 most common jobs? **"""

by_jobtitle = sal.groupby('JobTitle')
by_jobtitle_count = by_jobtitle.count()
by_jobtitle_count_ascending = by_jobtitle_count.sort_values('Id',ascending=False)
by_jobtitle_count_ascending.head()

"""Another Solution for the most 5 common jobs."""

job_count = sal['JobTitle'].value_counts()
job_count.head()

"""** How many Job Titles were represented by only one person in 2013? (e.g. Job Titles with only one occurence in 2013?) **"""

year_2013 = sal[sal['Year']==2013]
year_2013_jobcount = year_2013['JobTitle'].value_counts()
oneperson_joptitle = sum(year_2013_jobcount==1)
print(oneperson_joptitle)

"""** How many people have the word Chief in their job title? (This is pretty tricky) **"""

by_jobtitle = sal['JobTitle']

contain_chief = by_jobtitle.str.contains("Chief",case=False).sum()
#contain_chief_count = contain_chief[contain_chief==1]
#len(contain_chief_count)
#contain_chief_count.sum()
contain_chief



"""** Bonus: Is there a correlation between length of the Job Title string and Salary? **"""

sal['LengthOfStrings'] = sal['JobTitle'].str.len()
corelation = sal['LengthOfStrings'].corr(sal['TotalPayBenefits'])
corelation

"""# Great Job!"""